commit 0d929089da97427d298f68eabd371de256715d54
Author: Alejandro Alvarez Ayllon <a.alvarezayllon@gmail.com>
Date:   Fri Feb 4 14:29:48 2022 +0100

    Fix qsort_r call on macos

diff --git a/NdArray/NdArray/_impl/Operations.icpp b/NdArray/NdArray/_impl/Operations.icpp
index 39e883a..b9b860d 100644
--- a/NdArray/NdArray/_impl/Operations.icpp
+++ b/NdArray/NdArray/_impl/Operations.icpp
@@ -146,22 +146,29 @@ void sort(NdArray<T>& array, const std::vector<std::string>& attrs) {
   size_t count    = array.shape()[0];
   size_t row_size = array.shape()[1] * sizeof(T);
 
-  qsort_r(
-      &(*array.begin()), count, row_size,
-      [](const void* a, const void* b, void* context) {
-        const T*    arow         = static_cast<const T*>(a);
-        const T*    brow         = static_cast<const T*>(b);
-        const auto* attr_idx_ptr = static_cast<const std::vector<size_t>*>(context);
-        for (auto& idx : *attr_idx_ptr) {
-          if (*(arow + idx) < *(brow + idx)) {
-            return -1;
-          } else if (*(arow + idx) > *(brow + idx)) {
-            return 1;
-          }
-        }
-        return 0;
-      },
-      &attr_idx);
+#ifdef __APPLE__
+  auto compare = [](void* context, const void* a, const void* b) {
+#else
+  auto compare = [](const void* a, const void* b, void* context) {
+#endif
+    const T*    arow         = static_cast<const T*>(a);
+    const T*    brow         = static_cast<const T*>(b);
+    const auto* attr_idx_ptr = static_cast<const std::vector<size_t>*>(context);
+    for (auto& idx : *attr_idx_ptr) {
+      if (*(arow + idx) < *(brow + idx)) {
+        return -1;
+      } else if (*(arow + idx) > *(brow + idx)) {
+        return 1;
+      }
+    }
+    return 0;
+  };
+
+#ifdef __APPLE__
+  qsort_r(&(*array.begin()), count, row_size, &attr_idx, compare);
+#else
+  qsort_r(&(*array.begin()), count, row_size, compare, &attr_idx);
+#endif
 }
 
 }  // namespace NdArray
